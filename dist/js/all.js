"use strict";const cartElements=()=>{const t=document.querySelector(".cart__container"),e=document.querySelector(".cart__overlay"),a=document.querySelector(".cart");return{container:t,navShop:document.querySelectorAll(".nav__shop"),cartOverlay:e,cart:a,cartClose:document.querySelector(".cart__close")}},{container:container,navShop:navShop,cartOverlay:cartOverlay,cart:cart,cartClose:cartClose}=cartElements();class Cart{async getCartItems(){try{const t=await fetch("/data/cart-data/cart-items.json");return await t.json()}catch(t){console.error(t)}}displayCartItems(t){let e="";t.forEach((t=>{e+=`\n                <article class="cart__card">\n                    <div class="cart__box">\n                        <img src="${t.image}" alt="cart item" class="cart__img">\n                    </div>\n                    <div class="cart__details">\n                        <h4 class="cart__title">${t.title}</h4>\n                        <span class="cart__price">${t.price}</span>\n                        <div class="cart__amount">\n                            <div class="cart__amont-content">\n                                <span class="cart__amount-box">\n                                    <img src="/app/images/chevron-down.svg" alt="" width="20px" height="20px">\n                                </span>\n                                <span class="cart__amount-number">0</span>\n                                <span class="cart__amount-box">\n                                    <img src="/app/images/chevron-up.svg" alt="" width="20px" height="20px">\n                                </span>\n                            </div>\n                            <img src="/app/images/can-trash.svg" alt="" class="cart__amount-trash" width="25px" height="25px">\n                        </div>\n                    </div>\n                </article>\n            `})),container&&container.insertAdjacentHTML("beforeend",e)}toggleCart(){navShop.forEach((t=>{t.addEventListener("click",(()=>{cartOverlay&&cartOverlay.classList.add("show-overlay"),cart&&cart.classList.add("show-cart")}))})),cartClose&&cartClose.addEventListener("click",(()=>{cart.classList.remove("show-cart"),cartOverlay.classList.remove("show-overlay")}))}}(async()=>{const t=new Cart,e=await t.getCartItems();t.displayCartItems(e),t.toggleCart()})();class Featured{async getItems(){try{const t=await fetch("/data/featured-data/featured-items.json");return await t.json()}catch(t){console.error(t)}}displayFeatured(t){let e="";t.forEach((t=>{e+=`\n                <article class="boot">\n                    <div class="boot__sale">Sale</div>\n                    <img src="${t.image}" alt="sale boot" class="boot__img">\n                    <span class="boot__name">${t.name}</span>\n                    <span class="boot__price">${t.price}</span>\n                    <button class="button-light">\n                        Add to cart <img src="/app/images/arrow-right.svg" alt="arrow right icon" width="20px" height="20px">\n                    </button>\n                </article>\n            `}));const a=document.querySelector(".featured__container");a&&a.insertAdjacentHTML("beforeend",e)}}(async()=>{const t=new Featured,e=await t.getItems();t.displayFeatured(e)})();const domElements=()=>{const t=document.querySelector(".nav__list"),e=document.getElementById("nav-menu");return{navList:t,navMenu:e,closeMobMenu:()=>{e&&e.classList.remove("show")}}};let{navList:navList,navMenu:navMenu,closeMobMenu:closeMobMenu}=domElements();class NavLinks{getLinks=async()=>{try{const t=await fetch("/data/nav-data/navlinks.json");return await t.json()}catch(t){console.error(t)}};displayLinks=t=>{let e="";t.forEach((t=>{e+=`\n                <li class="nav__item">\n                    <a href="${t.link}" class="nav__link" onclick="closeMobMenu()">${t.text}</a>\n                </li>\n            `})),navList&&navList.insertAdjacentHTML("beforeend",e)}}(async()=>{const t=new NavLinks,e=await t.getLinks();t.displayLinks(e)})();class NewCollection{async getItems(){try{const t=await fetch("/data/new-collection-data/new-data.json");return await t.json()}catch(t){console.error(t)}}displayItems(t){let e="";t.forEach((t=>{e+=`\n                <div class="new__boot-card">\n                    <img src="${t.image}" alt="new item boot" class="new__boot-img">\n                    <div class="new__boot-overlay">\n                        <h4 class="overlay__title">${t.title}</h4>\n                        <p class="overlay__description">\n                            ${t.desc1} <br/> ${t.desc2}\n                        </p>\n                        <span class="overlay__price">${t.price}</span>\n                        <button class="button">\n                            <a href="#">Add to cart</a>\n                        </button>\n                    </div>\n                </div>\n            `}));const a=document.querySelector(".new__boot");a&&a.insertAdjacentHTML("beforeend",e)}}(async()=>{const t=new NewCollection,e=await t.getItems();t.displayItems(e)})();class Shop{async getShopBoots(){try{const t=await fetch("data/shop-data/shop.json");return await t.json()}catch(t){console.log(t)}}displayShopBoots(t){let e="";t.forEach((t=>{e+=`\n                <article class="boot">\n                    <img src="${t.image}" alt="sale boot" class="boot__img">\n                    <div class="boot__data">\n                        <h4 class="boot__name">${t.name}</h4>\n                        <span class="boot__price">${t.price}</span>\n                        <p class="boot__description">\n                            The embodiment of iconic <br/> Dr Martens Footwear   \n                        </p>\n                        <button class="button-light">\n                            Add to cart <img src="/app/images/arrow-right.svg" alt="arrow right icon" width="20px" height="20px">\n                        </button>\n                    </div>\n                </article>\n            `}));const a=document.querySelector(".shop__container");a&&a.insertAdjacentHTML("beforeend",e)}}(async()=>{const t=new Shop,e=await t.getShopBoots();t.displayShopBoots(e)})();class Boots{async getBoots(){try{const t=await fetch("/data/women-data/boots.json");return await t.json()}catch(t){console.log(t)}}displayWomeBoots(t){let e="";t.forEach((t=>{e+=`\n                <article class="women__boot">\n                    <img src="${t.image}" alt="sale boot" class="women__boot-img">\n                    <div class="women__boot-data">\n                        <h4 class="boot__name">${t.name}</h4>\n                        <span class="boot__price">${t.price}</span>\n                        <p class="boot__description">\n                            The embodiment of iconic <br/> Dr Martens Footwear   \n                        </p>\n                        <button class="button-light">\n                            Add to cart <img src="/app/images/arrow-right.svg" alt="arrow right icon" width="20px" height="20px">\n                        </button>\n                    </div>\n                </article>\n            `}));const a=document.querySelector(".women__container");a&&a.insertAdjacentHTML("beforeend",e)}}function toggleSearch(){const t=document.querySelector(".nav__search-form"),e=document.querySelector(".nav__search"),a=document.querySelector(".close-search"),n=document.getElementById("search-input");t&&(e.addEventListener("click",(()=>{t.classList.toggle("active-form")})),a.addEventListener("click",(()=>{t.classList.remove("active-form"),n.value=""})))}function filterSearch(){const t=document.getElementById("search-input").value.toLowerCase();document.querySelectorAll("section").forEach((e=>{t&&e.id.toString().toLowerCase().indexOf(t)>-1&&document.getElementById(e.id).scrollIntoView()}))}(async()=>{const t=new Boots,e=await t.getBoots();t.displayWomeBoots(e)})();const openMenu=()=>{const t=document.getElementById("nav-toggle"),e=document.getElementById("nav-menu"),a=document.querySelector(".nav__search-form");t.addEventListener("click",(()=>{e.classList.add("show"),function(){if(a.classList.contains("active-form"))a.classList.remove("active-form")}()}))},closeMenu=()=>{const t=document.getElementById("nav-close"),e=document.getElementById("nav-menu");t&&t.addEventListener("click",(()=>{e.classList.remove("show")}))};window.onscroll=()=>{const t=document.getElementById("header");this.scrollY>=30?t.classList.add("scroll-header"):t.classList.remove("scroll-header")},openMenu(),closeMenu(),toggleSearch();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
